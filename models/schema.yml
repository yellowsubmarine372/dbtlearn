version: 2

models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains Airbnb listings.
    columns:
      - name: listing_id
        description: Primary key for the listing.
        tests:
          - not_null
          - unique
      - name: host_id
        description: The host's id, references the host table.
        tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id
      - name: room_type
        description: Type of room available for booking.
        tests:
          - accepted_values: 
              values: ['Entire home/apt', 'Private room', 'Shared room', 'Hotel room']
      - name: minimum_nights
        description: '{{ doc("dim_listings_cleansed__minimum_nights") }}'
        tests:
          - positive_value
  - name: dim_hosts_cleansed
    description: Cleansed table which contains Airbnb hosts.
    columns:
      - name: host_id
        description: The host's id, references the host table.
        tests:
          - not_null
          - unique
      - name: host_name
        description: The host's name.
      - name: is_superhost
        description: Whether the host is a superhost.
        tests:
          - accepted_values:
              values: ['t', 'f']
      - name: created_at
        description: The date the host was created.
      - name: updated_at
        description: The date the host was last updated.
  - name: dim_listings_w_hosts
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source('airbnb', 'listings')
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: number
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: 0.99
              min_value: 50
              max_value: 500
          - dbt_expectations.expect_column_max_to_be_between:
              max_value: 5000
              config:
                severity: warn #change error to warning
